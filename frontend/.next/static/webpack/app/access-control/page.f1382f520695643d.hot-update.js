"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/access-control/page",{

/***/ "(app-pages-browser)/./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var _utils_serviceAuth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/serviceAuth */ \"(app-pages-browser)/./src/utils/serviceAuth.ts\");\n/* __next_internal_client_entry_do_not_use__ supabase,AuthProvider,useAuth,default auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Initialize Supabase client\nconst supabaseUrl = \"https://placeholder.supabase.co\" || 0;\nconst supabaseAnonKey = \"placeholder_key\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__.createClient)(supabaseUrl, supabaseAnonKey);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [session, setSession] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isStable, setIsStable] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Tenant state with demo fallback\n    const [tenant, setTenant] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        id: '54afbd1d-e72a-41e1-9d39-2c8a08a257ff',\n        name: 'Demo Company',\n        slug: 'demo-company',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n    });\n    // Tenant user state with demo fallback\n    const [tenantUser, setTenantUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        id: 'demo-tenant-user-id',\n        tenant_id: '54afbd1d-e72a-41e1-9d39-2c8a08a257ff',\n        user_id: 'demo-user-id',\n        role: 'client_admin',\n        is_active: true,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n    });\n    // Computed properties for RBAC\n    const isAuthenticated = !!user || !!session;\n    const isDemoMode =  false || \"https://placeholder.supabase.co\" === 'https://demo.supabase.co';\n    const currentUserId = (user === null || user === void 0 ? void 0 : user.id) || (tenantUser === null || tenantUser === void 0 ? void 0 : tenantUser.user_id) || null;\n    const currentTenantId = (tenant === null || tenant === void 0 ? void 0 : tenant.id) || null;\n    const currentUserRole = (tenantUser === null || tenantUser === void 0 ? void 0 : tenantUser.role) || null;\n    // Helper function to update service auth context\n    const updateServiceAuthContext = ()=>{\n        (0,_utils_serviceAuth__WEBPACK_IMPORTED_MODULE_2__.setServiceAuthContext)({\n            userId: currentUserId,\n            tenantId: currentTenantId,\n            userRole: currentUserRole,\n            isAuthenticated,\n            isDemoMode\n        });\n    };\n    // Initialize authentication state\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            console.log('üîê AuthProvider: Initializing authentication state');\n            const getInitialSession = {\n                \"AuthProvider.useEffect.getInitialSession\": async ()=>{\n                    try {\n                        const { data: { session: initialSession }, error } = await supabase.auth.getSession();\n                        if (error) {\n                            console.error('‚ùå AuthProvider: Error getting session:', error);\n                            // Fall back to demo mode\n                            setUser({\n                                id: 'demo-user-id',\n                                email: 'demo@company.com',\n                                created_at: new Date().toISOString(),\n                                updated_at: new Date().toISOString(),\n                                app_metadata: {},\n                                user_metadata: {},\n                                aud: 'authenticated',\n                                confirmation_sent_at: new Date().toISOString()\n                            });\n                            setTenantUser({\n                                id: 'demo-tenant-user-id',\n                                tenant_id: '54afbd1d-e72a-41e1-9d39-2c8a08a257ff',\n                                user_id: 'demo-user-id',\n                                role: 'client_admin',\n                                is_active: true,\n                                created_at: new Date().toISOString(),\n                                updated_at: new Date().toISOString()\n                            });\n                        } else if (initialSession) {\n                            console.log('‚úÖ AuthProvider: Found existing session');\n                            setSession(initialSession);\n                            setUser(initialSession.user);\n                            // Set tenant user for authenticated user\n                            setTenantUser({\n                                id: 'demo-tenant-user-id',\n                                tenant_id: '54afbd1d-e72a-41e1-9d39-2c8a08a257ff',\n                                user_id: initialSession.user.id,\n                                role: 'client_admin',\n                                is_active: true,\n                                created_at: new Date().toISOString(),\n                                updated_at: new Date().toISOString()\n                            });\n                        } else {\n                            console.log('‚ö†Ô∏è AuthProvider: No existing session, using demo user');\n                            // Fallback to demo user for stability\n                            setUser({\n                                id: 'demo-user-id',\n                                email: 'demo@company.com',\n                                created_at: new Date().toISOString(),\n                                updated_at: new Date().toISOString(),\n                                app_metadata: {},\n                                user_metadata: {},\n                                aud: 'authenticated',\n                                confirmation_sent_at: new Date().toISOString()\n                            });\n                            // Set demo tenant user\n                            setTenantUser({\n                                id: 'demo-tenant-user-id',\n                                tenant_id: '54afbd1d-e72a-41e1-9d39-2c8a08a257ff',\n                                user_id: 'demo-user-id',\n                                role: 'client_admin',\n                                is_active: true,\n                                created_at: new Date().toISOString(),\n                                updated_at: new Date().toISOString()\n                            });\n                        }\n                        setLoading(false);\n                        setIsStable(true);\n                        updateServiceAuthContext();\n                        console.log('‚úÖ AuthProvider: Authentication state stabilized');\n                    } catch (error) {\n                        console.error('‚ùå AuthProvider: Unexpected error during initialization:', error);\n                        // Ensure we always have a stable state\n                        setUser(null);\n                        setSession(null);\n                        setTenantUser({\n                            id: 'demo-tenant-user-id',\n                            tenant_id: '54afbd1d-e72a-41e1-9d39-2c8a08a257ff',\n                            user_id: 'demo-user-id',\n                            role: 'client_admin',\n                            is_active: true,\n                            created_at: new Date().toISOString(),\n                            updated_at: new Date().toISOString()\n                        });\n                        setLoading(false);\n                        setIsStable(true);\n                        updateServiceAuthContext();\n                    }\n                }\n            }[\"AuthProvider.useEffect.getInitialSession\"];\n            getInitialSession();\n            // Listen for auth changes\n            const { data: { subscription } } = supabase.auth.onAuthStateChange({\n                \"AuthProvider.useEffect\": async (event, newSession)=>{\n                    console.log('üîÑ AuthProvider: Auth state changed:', event);\n                    if (newSession) {\n                        setSession(newSession);\n                        setUser(newSession.user);\n                        // Set tenant user for authenticated user\n                        setTenantUser({\n                            id: 'demo-tenant-user-id',\n                            tenant_id: '54afbd1d-e72a-41e1-9d39-2c8a08a257ff',\n                            user_id: newSession.user.id,\n                            role: 'client_admin',\n                            is_active: true,\n                            created_at: new Date().toISOString(),\n                            updated_at: new Date().toISOString()\n                        });\n                    } else {\n                        console.log('‚ö†Ô∏è AuthProvider: User signed out, falling back to demo user');\n                        // Fallback to demo user for stability\n                        setUser({\n                            id: 'demo-user-id',\n                            email: 'demo@company.com',\n                            created_at: new Date().toISOString(),\n                            updated_at: new Date().toISOString(),\n                            app_metadata: {},\n                            user_metadata: {},\n                            aud: 'authenticated',\n                            confirmation_sent_at: new Date().toISOString()\n                        });\n                        setSession(null);\n                        // Set demo tenant user\n                        setTenantUser({\n                            id: 'demo-tenant-user-id',\n                            tenant_id: '54afbd1d-e72a-41e1-9d39-2c8a08a257ff',\n                            user_id: 'demo-user-id',\n                            role: 'client_admin',\n                            is_active: true,\n                            created_at: new Date().toISOString(),\n                            updated_at: new Date().toISOString()\n                        });\n                    }\n                    setLoading(false);\n                    setIsStable(true);\n                    updateServiceAuthContext();\n                }\n            }[\"AuthProvider.useEffect\"]);\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    subscription.unsubscribe();\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    const signIn = async (email, password)=>{\n        try {\n            const { error } = await supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            return {\n                error\n            };\n        } catch (error) {\n            console.error('‚ùå AuthProvider: Sign in error:', error);\n            return {\n                error\n            };\n        }\n    };\n    const signUp = async (email, password)=>{\n        try {\n            const { error } = await supabase.auth.signUp({\n                email,\n                password\n            });\n            return {\n                error\n            };\n        } catch (error) {\n            console.error('‚ùå AuthProvider: Sign up error:', error);\n            return {\n                error\n            };\n        }\n    };\n    const signOut = async ()=>{\n        console.log('üîê AuthProvider: Signing out');\n        try {\n            await supabase.auth.signOut();\n            // Reset to demo state\n            setUser(null);\n            setSession(null);\n            setTenantUser({\n                id: 'demo-tenant-user-id',\n                tenant_id: '54afbd1d-e72a-41e1-9d39-2c8a08a257ff',\n                user_id: 'demo-user-id',\n                role: 'client_admin',\n                is_active: true,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            });\n            setLoading(false);\n            setIsStable(true);\n            updateServiceAuthContext();\n            // Redirect to login page\n            if (true) {\n                window.location.href = '/login';\n            }\n        } catch (error) {\n            console.error('‚ùå AuthProvider: Error during sign out:', error);\n            // Still redirect even if there's an error\n            if (true) {\n                window.location.href = '/login';\n            }\n        }\n    };\n    const refreshTenant = async ()=>{\n        console.log('üîÑ AuthProvider: Refreshing tenant information');\n    // In a real implementation, this would fetch fresh tenant data\n    // For now, we maintain the demo state\n    };\n    const refreshSession = async ()=>{\n        console.log('üîÑ AuthProvider: Refreshing session');\n        try {\n            const { data: { session }, error } = await supabase.auth.refreshSession();\n            if (error) {\n                console.error('‚ùå AuthProvider: Error refreshing session:', error);\n            } else {\n                setSession(session);\n                if (session === null || session === void 0 ? void 0 : session.user) {\n                    setUser(session.user);\n                }\n            }\n        } catch (error) {\n            console.error('‚ùå AuthProvider: Unexpected error refreshing session:', error);\n        }\n    };\n    const value = {\n        user,\n        tenant,\n        tenantUser,\n        session,\n        loading,\n        signIn,\n        signUp,\n        signOut,\n        refreshTenant,\n        refreshSession,\n        isStable,\n        isAuthenticated,\n        isDemoMode,\n        currentUserId,\n        currentTenantId,\n        currentUserRole\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/ubuntu/ETLA-Platform/frontend/src/contexts/AuthContext.tsx\",\n        lineNumber: 356,\n        columnNumber: 5\n    }, this);\n}\n_s(AuthProvider, \"YEpTbEL9+YoQBsFfazIctBtacvE=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuthContext);\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/AuthContext.tsx\n"));

/***/ })

});