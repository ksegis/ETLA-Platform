// src/rbac/constants/index.ts

import { FEATURES, PERMISSIONS, ROLES } from "@/hooks/usePermissions";
import type { Feature, Permission, Role } from "@/hooks/usePermissions";

export { FEATURES, PERMISSIONS, ROLES };
export type { Feature, Permission, Role };

// Common helpers some files expect
export const ALL_ROLES: Role[] = [
  ROLES.HOST_ADMIN,
  ROLES.CLIENT_ADMIN,
  ROLES.TENANT_ADMIN, // alias of CLIENT_ADMIN (see usePermissions)
  ROLES.PROGRAM_MANAGER,
  ROLES.CLIENT_USER,
  ROLES.USER,
];

// Optional legacy mirrors (handy for code search or gradual refactors)
export const FEATURES_LEGACY = {
  ACCESS_CONTROL:     FEATURES.ACCESS_CONTROL,
  TENANT_MANAGEMENT:  FEATURES.TENANT_MANAGEMENT,
  WORK_REQUESTS:      FEATURES.WORK_REQUESTS,
  PROJECTS:           FEATURES.PROJECT_MANAGEMENT,
  PROJECT_MANAGEMENT: FEATURES.PROJECT_MANAGEMENT,
  RISK_MANAGEMENT:    FEATURES.RISK_MANAGEMENT,
  EMPLOYEES:          FEATURES.EMPLOYEES,
  PROFILES:           FEATURES.EMPLOYEE_RECORDS,
  DASHBOARDS:         FEATURES.DASHBOARDS,
  REPORTING:          FEATURES.REPORTING,
  ANALYTICS:          FEATURES.ANALYTICS,
} as const;

export const PERMISSIONS_LEGACY = {
  VIEW:                 PERMISSIONS.VIEW,
  CREATE:               PERMISSIONS.CREATE,
  EDIT:                 PERMISSIONS.UPDATE, // map EDIT -> UPDATE
  DELETE:               PERMISSIONS.DELETE,
  APPROVE:              PERMISSIONS.APPROVE,
  WORK_REQUESTS_CREATE: PERMISSIONS.WORK_REQUESTS_CREATE,
  WORK_REQUESTS_UPDATE: PERMISSIONS.WORK_REQUESTS_UPDATE,
  WORK_REQUESTS_DELETE: PERMISSIONS.WORK_REQUESTS_DELETE,
} as const;
